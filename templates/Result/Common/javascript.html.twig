<script>

        if(document.getElementsByClassName('data-container-vote-type').length > 0){
            var element = document.querySelector('.data-container-vote-type') ;
            var type    = element.getAttribute("data-type");
           
            // Fetch data every 1 minute
            setInterval(function(){
                fetchDataType(type, false);
            }, 30 * 1000);

            // Fetch data initially
            fetchDataType(type, false);
            
        }else{

            var element = document.getElementById('data-container-vote') ;
            var type    = element.getAttribute("data-type");
          
            // Fetch data every 1 minute
            setInterval(function(){
                fetchData(type, true);
            }, 30 * 1000);

            // Fetch data initially
            fetchData(type, true);
        }

        /**
        * Add data  block resume
        **/
        function addResumeBlock(_type, _data){
            if(document.getElementById('vote-total-'+_type)){
                document.getElementById('vote-total-'+_type).innerHTML   = _data.total;
                document.getElementById('vote-isgood-'+_type).innerHTML  = _data.isGood;
                document.getElementById('vote-iswhite-'+_type).innerHTML = _data.isWhite;
                document.getElementById('vote-isdead-'+_type).innerHTML  = _data.isDead;
            }
            
        }

        /**
        * Show result
        **/
        function fetchData(_type, _isFull) {

            $url = '{{ path('result_ajax') }}?type='+_type ;
            if(_type != 'all'){
                $url = $url +'&nopoint=1'
            }
            fetch($url)
                .then(response => response.json())
                .then(result => {

                    
                    if(_type == 'all'){
                        containerMr  = document.getElementById('data-container-vote-mr');
                        containerMme = document.getElementById('data-container-vote-mme');
                        containerMr.innerHTML  = '';
                        containerMme.innerHTML = '';
                    
                    }else{
                        container1     = document.getElementById('data-container-vote-1');
                        container2     = document.getElementById('data-container-vote-2');
                        container3     = document.getElementById('data-container-vote-3');

                        container1.innerHTML = '';
                        container2.innerHTML = '';
                        container3.innerHTML = '';
                    }

                    results    = Array.isArray(result) ? result : JSON.parse(result);
                    data       = results['data'];
                    countMen   = results['count']['men'];
                    countWomen = results['count']['women'];
                    
                    //Block resume
                    addResumeBlock('mr', countMen) ;
                    addResumeBlock('mme', countWomen) ;
                    var num           = 0; 
                    var numMax        = 40;
                    var containerNum  = 1; 
                    data.forEach(function callback(item, index)  {
                        
                        a = mappingDataToHtmlByType(item, _isFull) ;

                        var civility = `${item.civility}`;
                        
                        if(_type == 'all'){
                            if(item.vote_count > 0){
                                if(civility == "Mr"){
                                    containerMr.appendChild(a);
                                }else{
                                    containerMme.appendChild(a);
                                }
                            }
                        }else{
                            //container.appendChild(a);

                            if(num == numMax){
                                containerNum = containerNum + 1; 
                                num          = 0 ;
                                if(containerNum > 3){
                                    containerNum = 3;
                                }
                            }
                            var containerName = 'data-container-vote-'+containerNum;
                            
                            document.getElementById(containerName).appendChild(a);
                            num = num + 1 ;
                        }
                        
                    });
                })
                .catch(error => {
                    console.error(error);
                });
        }

        /**
        * Show result by type
        **/
        function fetchDataType(_type, _isFull) {

            fetch('{{ path('result_ajax') }}?type='+_type)
                .then(response => response.json())
                .then(result => {
                    // Process the data returned from the server
                   
                    const container1  = document.getElementById('data-container-vote-1');
                    const container2  = document.getElementById('data-container-vote-2');
                    const container3  = document.getElementById('data-container-vote-3');
                    const container4  = document.getElementById('data-container-vote-4');
                    const container5  = document.getElementById('data-container-vote-5');
                    const container6  = document.getElementById('data-container-vote-6');

                    container1.innerHTML  = '';
                    container2.innerHTML  = '';
                    container3.innerHTML  = '';
                    container4.innerHTML  = '';
                    container5.innerHTML  = '';
                    container6.innerHTML  = '';

                    results      = Array.isArray(result) ? result : JSON.parse(result);
                    data         = results['data'];
                    countMen     = results['count']['men'];
                    countWomen   = results['count']['women'];
                    maxResult    = results['maxResult'] ;
                    reserveCount = results['reserveCount'] ;
                    //Block resume
                    addResumeBlock('mr', countMen) ;
                    addResumeBlock('mme', countWomen) ;

                    var num           = 0; 
                    var numMax        = 15;
                    var containerNum  = 1;
                    var count         = data.length; 
                    var dataLast      = data.slice(-reserveCount); 
                    
                    data.forEach(function callback(item, index) {
                        
                        a = mappingDataToHtmlByType(item, _isFull) ;
                        if(item.vote_count > 0){
                            
                            if(num == numMax){
                                containerNum = containerNum + 1; 
                                num          = 0 ;

                            }

                            if(item.type == 'reserve'){
                                containerNum = 6 ;
                            }

                            var containerName = 'data-container-vote-'+containerNum;
                            document.getElementById(containerName).appendChild(a);
                            num = num + 1 ;
                            
                        }
                        
                    });
                })
                .catch(error => {
                    console.error(error);
                });
        }

        /**
        * Mapping data image to HTML
        **/
        function mappingDataImageToHtmlByType(_item, _isFull){

            const img = document.createElement('img');
            var base_url = window.location.origin;
            var photo = item.photo != null ? item.photo : base_url+'/images/illustration/no-image.png';
            img.src = `${photo}`;
            img.alt = 'User Image';
            img.classList.add('rounded-circle', 'w-px-50');

            return img ;
        }

        /**
        * Mapping data to HTML
        **/
        function mappingDataToHtmlByType(_item, _isFull){
            item = _item ;

            const a = document.createElement('a');
            a.href = '#';
            
            a.classList.add('list-group-item', 'list-group-item-action', 'd-flex', 'align-items-center');
            if(_item.type != ''){
                a.classList.add(_item.type);
                a.classList.add(_item.key);
            }
            
            img = mappingDataImageToHtmlByType(_item, _isFull) ;
            
            const div1 = document.createElement('div');
            div1.classList.add('w-100');

            const div2 = document.createElement('div');
            div2.classList.add('d-flex', 'justify-content-between');

            const user_info = document.createElement('div');
            user_info.classList.add('user-info');

            const h6 = document.createElement('h6');
            h6.classList.add('mb-1');
            h6.textContent = `${item.firstname} ${item.lastname}`; // Assuming 'item' is an object containing the name property
            const small = document.createElement('small');
            //const smallNum = document.createElement('smallNum');

            candidatNumber = `Laharana : ${item.number}`;
            if(_isFull == false){
                candidatNumber = `${item.number}`;
            }
            small.textContent = candidatNumber; 


            const user_status = document.createElement('div');
            user_status.classList.add('user-status');
            const span = document.createElement('span');
            span.classList.add('badge', 'badge-dot', 'bg-success');
            const small2 = document.createElement('small');
            small2.textContent = '';

            user_status.appendChild(span);
            user_status.appendChild(small2);           

            if(_isFull == true){
                user_info.appendChild(h6);
            }

            user_info.appendChild(small);
            user_info.appendChild(user_status);

            const add_btn = document.createElement('div');
            add_btn.classList.add('add-btn');

            const button = document.createElement('div');
            button.classList.add('badge', 'bg-success');
            button.textContent = `${item.vote_count}`;

            add_btn.appendChild(button);

            div2.appendChild(user_info);
            if(_isFull == false){
                const user_avatar = document.createElement('div');
                user_avatar.classList.add('user-avatar');
                user_avatar.appendChild(img);
                div2.appendChild(user_avatar);
                
            }
            div2.appendChild(add_btn);

            div1.appendChild(div2);

            if(_isFull == true){
                a.appendChild(img);
            }
            
            a.appendChild(div1);

            return a;
        }
        
    </script>